AWSTemplateFormatVersion: '2010-09-09'
Description: |
  Creates an EC2 instance with a security group.
  Based on AWS sample template "EC2InstanceWithSecurityGroupSample",
      which is available at https://amzn.to/2WdaX2i.

Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable access to the instance
    Type: String
    Default: ''
    ConstraintDescription: must be a string.

  OperatingSystem:
    Description: Chosen operating system
    Type: String
    Default: AmazonLinux2
    AllowedValues:
      - AmazonLinux2
      - Windows2016Base

  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: t2.small
    AllowedValues:
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - m4.large
      - m4.xlarge
    ConstraintDescription: must be a valid EC2 instance type.

  PublicLocation:
    Description: The IP address range that can be used to connect to the EC2 instances
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: '0.0.0.0/0'
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.

Conditions:
  HasKeypair: !Not [ !Equals [ !Ref KeyName, '' ]]

Mappings:
  Global:
    ConnectPortByOs:
      Windows2016Base: 3389
      AmazonLinux2: 22
    AmiSearchString:
      AmazonLinux2: 'amzn2-ami-hvm-2.0.20190508-x86_64-gp2'
      Windows2016Base: 'Windows_Server-2016-English-Full-Base-2019.05.15'

Resources:
  AMI:
    Type: "Custom::AMI"
    Properties:
      Filters:
        name: !FindInMap [ 'Global', 'AmiSearchString', !Ref OperatingSystem ]
      ServiceToken: !Sub 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:binxio-cfn-ami-provider'

  EC2Instance:
    Type: "AWS::EC2::Instance"
    Properties:
      InstanceType: !Ref 'InstanceType'
      SecurityGroups:
        - !Ref 'InstanceSg'
      KeyName: !If [ 'HasKeypair', !Ref KeyName, !Ref "AWS::NoValue" ]
      ImageId: !Ref AMI

  InstanceSg:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: Enable public access via OS-specific port
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: !FindInMap
            - 'Global'
            - 'ConnectPortByOs'
            - !Ref 'OperatingSystem'
          ToPort: !FindInMap
            - 'Global'
            - 'ConnectPortByOs'
            - !Ref 'OperatingSystem'
          CidrIp: !Ref 'PublicLocation'

Outputs:
  AmiId:
    Description: Dynamically-chosen AMI ID
    Value: !Ref AMI

  InstanceId:
    Description: InstanceId of the EC2 instance
    Value: !Ref EC2Instance

  AZ:
    Description: AZ of the EC2 instance
    Value: !GetAtt 'EC2Instance.AvailabilityZone'

  PublicDNS:
    Description: Public DNSName of the EC2 instance
    Value: !GetAtt 'EC2Instance.PublicDnsName'

  PublicIP:
    Description: Public IP address of the EC2 instance
    Value: !GetAtt 'EC2Instance.PublicIp'
